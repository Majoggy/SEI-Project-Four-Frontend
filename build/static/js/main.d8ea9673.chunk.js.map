{"version":3,"sources":["lib/auth.js","components/common/SecureRoute.js","components/common/NavigationBar.js","components/common/Home.js","config.js","lib/api.js","components/auth/Register.js","components/auth/Login.js","components/common/NoGames.js","lib/helpers.js","lib/filterFunctions.js","components/cards/GameCard.js","components/cards/EmptyGameCard.js","components/common/GameList.js","components/common/Loading.js","components/common/NoPlayers.js","components/common/Leaderboard.js","components/common/Dashboard.js","components/common/PlayerAdd.js","components/common/GameAdd.js","components/common/GameEdit.js","App.js","index.js"],"names":["removeToken","window","localStorage","removeItem","getPayLoad","token","getItem","parts","split","length","JSON","parse","atob","isAuthenticated","payload","Math","round","Date","now","exp","SecureRoute","Component","component","rest","to","NavigationBar","history","useHistory","isAuth","useLocation","Navbar","className","expand","Container","Brand","href","src","alt","Toggle","Collapse","id","Nav","Link","onClick","push","Home","fluid","baseUrl","process","registerUser","formData","axios","post","loginUser","getAllPlayers","get","createPlayer","getSingleGame","gameId","createGame","editGame","put","Register","initialState","username","email","password","passwordConfirmation","React","useState","setFormData","formErrors","setFormErrors","handleChange","e","value","target","type","checked","name","console","log","handleSubmit","a","preventDefault","response","data","Row","Col","xs","Form","onSubmit","Group","controlId","Label","Control","placeholder","onChange","Text","Button","variant","Login","isError","setIsError","setItem","NoGames","minusFormatting","num","statify","games","players","newData","map","player","playerObj","firstPlaceCount","secondPlaceCount","thirdPlaceCount","fourthPlaceCount","fifthPlaceCount","sixthPlaceCount","seventhPlaceCount","eighthPlaceCount","ninthPlaceCount","winningsCount","lossesCount","game","noOne","first","firstPlace","second","secondPlace","third","thirdPlace","fourth","fourthPlace","fifth","fifthPlace","sixth","sixthPlace","seventh","seventhPlace","eighth","eighthPlace","ninth","ninthPlace","prizeForFirst","buyIn","prizeForSecond","prizeForThird","part","whole","total","winnings","losses","gameCount","average","toFixed","gamesPlayed","topTwoPercentage","alphaSort","playerStats","sort","b","playerA","toUpperCase","playerB","mostRecentSort","field","GameCard","refetchData","show","setShow","handleDelete","delete","date","numberOfPlayers","pathname","state","Modal","size","centered","Header","Title","class","Body","md","Footer","EmptyGameCard","GameList","gameHistory","slice","Loading","NoPlayers","Leaderboard","filteredStats","style","marginBottom","Table","striped","bordered","hover","height","Dashboard","setGames","setPlayers","setPlayerStats","setFilteredStats","setGameHistory","userId","setUserId","unfilteredGames","setunfilteredGames","unfilteredPlayers","setunfilteredPlayers","getData","gameRes","playerRes","payLoad","user","sub","useEffect","filter","err","filterForId","toggleFilter","useCallback","event","gamesPlayedSort","totalSort","parseInt","trim","isNaN","topTwoSort","Image","border","Dropdown","Menu","Item","PlayerAdd","image","GameAdd","useForm","register","payoutsKnown","setPayoutsKnown","playerNumKnown","setPlayerNumKnown","buyinKnown","setBuyinKnown","playerList","setPlayerList","totalPotDifference","setTotalPotDifference","playerData","handleSub","mergeThenSend","rankingsData","as","required","defaultValue","disabled","hidden","GameEdit","location","gameData","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8ea9673.chunk.js","sourcesContent":["export function setToken(token) {\n  window.localStorage.setItem('token', token)\n}\n\nexport function getToken() {\n  return window.localStorage.getItem('token')\n}\n\nexport function removeToken() {\n  window.localStorage.removeItem('token')\n}\n\nexport function getPayLoad() {\n  const token = getToken()\n  if (!token) return false\n  const parts = token.split('.')\n  if (parts.length < 3) return false\n  return JSON.parse(atob(parts[1]))\n}\n\nexport function isAuthenticated() {\n  const payload = getPayLoad()\n  if (!payload) return false\n  const now = Math.round(Date.now() / 1000)\n  return now < payload.exp\n}\n\nexport function isOwner(userId) {\n  const payload = getPayLoad()\n  if (!payload) return false\n  return userId === payload.sub\n}","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { removeToken, isAuthenticated } from '../../lib/auth'\n\nfunction SecureRoute({ component: Component, ...rest }) {\n  if (isAuthenticated()) return <Route {...rest} component={Component} />\n  removeToken()\n  return <Redirect to=\"/login\"/>\n}\n\nexport default SecureRoute\n","import React from 'react'\nimport { Container, Navbar, Nav } from 'react-bootstrap'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { removeToken } from '../../lib/auth'\nimport { isAuthenticated } from '../../lib/auth'\n\nfunction NavigationBar() {\n  const history = useHistory()\n  const isAuth = isAuthenticated()\n\n  const handleLogout = () => {\n    removeToken()\n    history.push('/')\n  }\n\n  useLocation()\n\n  return (\n    <Navbar className=\"nav-bar-border light-red\" expand=\"lg\">\n      <Container className=\"light-red\">\n        {!isAuth &&\n        <>\n          <Navbar.Brand className=\"bold\" href=\"/\">\n            <img src=\"https://i.ibb.co/CnfjVTj/aces-icon.png\" \n              className=\"aces-icon\" \n              alt=\"aces-icon\"/>\n          </Navbar.Brand>\n\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        </>\n        }\n        {isAuth &&\n        <>\n          <Navbar.Brand className=\"bold\" href=\"/dashboard\">\n            <img src=\"https://i.ibb.co/CnfjVTj/aces-icon.png\" \n              className=\"aces-icon\" \n              alt=\"aces-icon\"/>\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        </>\n        }\n\n        <Navbar.Collapse \n          id=\"basic-navbar-nav\" \n          className=\"justify-content-end\">\n          {!isAuth &&\n          <Nav>\n            <Nav.Link className=\"bold\" href=\"/login\">Log In</Nav.Link>\n            <Nav.Link className=\"bold\" href=\"/register\">Register</Nav.Link>\n          </Nav>\n          }\n          {isAuth &&\n            <Nav>\n              <Nav.Link \n                className=\"bold\" \n                href=\"/\" \n                onClick={handleLogout}>\n                Log Out\n              </Nav.Link>\n            </Nav>}\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  )\n}\n\nexport default NavigationBar","import React from 'react'\nimport { Container } from 'react-bootstrap'\n\nfunction Home() {\n  \n  return (\n    <>\n      <Container fluid className=\"no-pad\">\n        <div className=\"home-wrap off-white\">\n          <div className=\"title-wrap\">\n            <p className=\"big-title\"><strong>Home Game Tracker</strong></p>\n            <p className=\"tagline\">Poker statistics at the click of a button</p>\n          </div>\n          <div className=\"dash-img\"></div>\n        </div>\n      </Container>\n      <section className=\"tag-wrap\">\n        <p className=\"info-tagline\">Seperate the winners from the losers - start logging your games today!</p>\n      </section>\n    </>\n  )\n}\n\nexport default Home","const devUrl = '/api'\nconst prodUrl = process.env.REACT_APP_PROD_URL\nconst baseUrl = process.env.NODE_ENV === 'production' ? prodUrl : devUrl\n\nexport default baseUrl","import axios from 'axios'\nimport baseUrl from '../config'\n// import { getToken } from './auth'\n\n// function headers() {\n//   return {\n//     headers: { Authorization: `Bearer ${getToken()}` },\n//   }\n// }\n\n// Commented out getToken and headers func. Uncomment and then add headers()\n// to the end of each route. See project 3 api.js file for reference.\n\n// * USER REQUESTS\n\nexport function registerUser(formData) {\n  return axios.post(`${baseUrl}/auth/register/`, formData)\n}\n\nexport function loginUser(formData) {\n  return axios.post(`${baseUrl}/auth/login/`, formData)\n}\n\n// Implement profiles/user edits as stretch goal\n\n// export function profileUser() {\n//   return axios.get('/api/profile', headers())\n// }\n\n// export function editUser(userId, formData) {\n//   return axios.put(`/api/profile/${userId}`, formData, headers())\n// }\n\n// * PLAYER REQUESTS\n\nexport function getAllPlayers() {\n  return axios.get(`${baseUrl}/players/`)\n}\n\nexport function getSinglePlayer(playerId) {\n  return axios.get(`${baseUrl}/players/${playerId}/`)\n}\n\n\n\nexport function createPlayer(formData) {\n  return axios.post(`${baseUrl}/players/`, formData)\n}\n\nexport function editPlayer(playerId, formData) {\n  return axios.put(`${baseUrl}/players/${playerId}/`, formData)\n}\n\nexport function deletePlayer(playerId) {\n  return axios.delete(`${baseUrl}/players/${playerId}/`)\n}\n\n// * GAME REQUESTS\n\nexport function getAllGames() {\n  return axios.get(`${baseUrl}/games/`)\n}\n\nexport function getSingleGame(gameId) {\n  return axios.get(`${baseUrl}/games/${gameId}/`)\n}\n\nexport function createGame(formData) {\n  return axios.post(`${baseUrl}/games/`, formData)\n}\n\nexport function editGame(gameId, formData) {\n  return axios.put(`${baseUrl}/games/${gameId}/`, formData)\n}\n\nexport function deleteGame(gameId) {\n  return axios.delete(`${baseUrl}/games/${gameId}/`)\n}\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Form, Button, Container, Col, Row } from 'react-bootstrap'\n\nimport { registerUser } from '../../lib/api'\n\nfunction Register() {\n\n  const initialState = {\n    username: '',\n    email: '',\n    password: '',\n    passwordConfirmation: '',\n  }\n\n  const history = useHistory()\n  const [formData, setFormData] = React.useState(initialState)\n  const [formErrors, setFormErrors] = React.useState(initialState)\n\n  const handleChange = e => {\n    const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value\n    setFormData({ ...formData, [e.target.name]: value })\n    setFormErrors({ ...formErrors, [e.target.name]: '' })\n    console.log(formData)\n  }\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n    try {\n      await registerUser(formData)\n      history.push('/dashboard')\n    } catch (err) {\n      setFormErrors(err.response.data)\n    }\n  }\n\n  return (\n    <>\n      <Container className=\"register\" fluid>\n        <Row>\n          <Col className=\"outer-col\"></Col>\n          <Col xs={4} className=\"form-vertical-align\">\n            <Form onSubmit={handleSubmit}>\n              <h4>Register</h4>\n              <Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control\n                  type=\"username\"\n                  placeholder=\"Enter Username\"\n                  name=\"username\"\n                  className={`${formErrors.username ? 'is-invalid' : ''}`}\n                  value={formData.username}\n                  onChange={handleChange}\n                />\n                {formErrors.username && (\n                  <Form.Text className=\"text-muted\">{formErrors.username}</Form.Text>\n                )}\n              </Form.Group>\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Label>Email address</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Enter email\"\n                  name=\"email\"\n                  className={`${formErrors.email ? 'is-invalid' : ''}`}\n                  value={formData.email}\n                  onChange={handleChange}\n                />\n              </Form.Group>\n              <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  className={`${formErrors.password ? 'is-invalid' : ''}`}\n                  value={formData.password}\n                  onChange={handleChange}\n                />\n                {formErrors.password && (\n                  <Form.Text className=\"text-muted\">{formErrors.password}</Form.Text>\n                )}\n              </Form.Group>\n              <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <Form.Label>Password Confirmation</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Password Confirmation\"\n                  name=\"passwordConfirmation\"\n                  className={`${formErrors.passwordConfirmation ? 'is-invalid' : ''}`}\n                  value={formData.passwordConfirmation}\n                  onChange={handleChange}\n                />\n                {formErrors.passwordConfirmation && (\n                  <Form.Text className=\"text-muted\">\n                    {formErrors.passwordConfirmation}\n                  </Form.Text>\n                )}\n              </Form.Group>\n\n              <Button variant=\"none\" className=\"btn-default\" type=\"submit\">\n                Register\n              </Button>\n            </Form>\n          </Col>\n          <Col className=\"outer-col\"></Col>\n        </Row>\n      </Container>\n    </>\n  )\n}\n\nexport default Register","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Form, Button, Container, Col, Row } from 'react-bootstrap'\n\nimport { loginUser } from '../../lib/api'\nimport { setToken } from '../../lib/auth'\n\nfunction Login() {\n\n  const initialState = {\n    username: '',\n    password: '',\n  }\n\n  const history = useHistory()\n  const [formData, setFormData] = React.useState(initialState)\n  const [isError, setIsError] = React.useState(false)\n  const [formErrors, setFormErrors] = React.useState(initialState)\n\n  const handleChange = e => {\n    setFormData({ ...formData, [e.target.name]: e.target.value })\n    setFormErrors({ ...formErrors, [e.target.name]: '' })\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      const { data } = await loginUser(formData)\n      setToken(data.token)\n      history.push('/dashboard')\n    } catch (err) {\n      setIsError(true)\n    }\n  }\n\n  return (\n    <>\n      <Container className=\"login\" fluid>\n        <Row>\n          <Col className=\"outer-col\"></Col>\n          <Col xs={4} className=\"form-vertical-align\">\n            <Form onSubmit={handleSubmit}>\n              <h2>Login</h2>\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter username\"\n                  name=\"username\"\n                  onChange={handleChange}\n                />\n              </Form.Group>\n              <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  onChange={handleChange}\n                />\n              </Form.Group>\n              <Form.Group className=\"mb-3\">\n                {isError && (\n                  <Form.Text className=\"text-muted\">\n                    Either username or password were incorrect.\n                  </Form.Text>\n                )}\n              </Form.Group>\n              <Button variant=\"none\" className=\"btn-default\" type=\"submit\">\n                Login\n              </Button>\n            </Form>\n          </Col>\n          <Col className=\"outer-col\"></Col>\n        </Row>\n      </Container>\n    </>\n  )\n}\n\nexport default Login\n","function NoGames() {\n  return <h1>Please Add Games...</h1>\n}\n\nexport default NoGames","export function percentage (part, whole) {\n  const result = 100 * part / whole\n  return `${result.toFixed(0)}%`\n}\n\nexport function minusFormatting (num) {\n  if (num < 0) {\n    num = num * -1\n    return `-£${num}`\n  } else if (num === 0) {\n    return '£0' \n  } else return `£${num}`\n}\n\n// I am fully aware of how insane the below code is. Desperately needs refactoring.\n// But seeing as it's basically the core functionality of the whole project,\n// getting it doing what it's supposed to by the deadline took precedence.\n\nexport function statify(games, players) {\n  const newData = []\n\n  // Creating the playerObj, a blank slate to store player specific game data\n\n  players.map(player => {\n    const name = player.name\n    let playerObj = { 'name': name }\n\n    // The wall of counters\n\n    let firstPlaceCount = 0\n    let secondPlaceCount = 0\n    let thirdPlaceCount = 0\n    let fourthPlaceCount = 0\n    let fifthPlaceCount = 0\n    let sixthPlaceCount = 0\n    let seventhPlaceCount = 0\n    let eighthPlaceCount = 0\n    let ninthPlaceCount = 0\n    let winningsCount = 0\n    let lossesCount = 0\n    \n    games.map(game => {\n      const noOne = 'John Doe'\n      const first = game.firstPlace.name\n      const second = game.secondPlace.name\n      const third = game.thirdPlace.name\n      const fourth = (game.fourthPlace === null) ? noOne : game.fourthPlace.name\n      const fifth = (game.fifthPlace === null) ? noOne : game.fifthPlace.name\n      const sixth = (game.sixthPlace === null) ? noOne : game.sixthPlace.name\n      const seventh = (game.seventhPlace === null) ? noOne : game.seventhPlace.name\n      const eighth = (game.eighthPlace === null) ? noOne : game.eighthPlace.name\n      const ninth = (game.ninthPlace === null) ? noOne : game.ninthPlace.name\n\n      // Totting up the positions, the money cashes, as well as the buyins\n      // Going through each game and adding to each specific player using counters\n\n      if (first === name) {\n        firstPlaceCount += 1\n        winningsCount += game.prizeForFirst\n        lossesCount += game.buyIn\n      } playerObj = { ...playerObj, 'first': firstPlaceCount, \n        'winnings': winningsCount, 'losses': lossesCount }\n\n      if (second === name) {\n        secondPlaceCount += 1\n        winningsCount += game.prizeForSecond\n        lossesCount += game.buyIn\n      } playerObj = { ...playerObj, 'second': secondPlaceCount,\n        'winnings': winningsCount, 'losses': lossesCount }\n\n      if (third === name) {\n        thirdPlaceCount += 1\n        winningsCount += game.prizeForThird\n        lossesCount += game.buyIn\n      } playerObj = { ...playerObj, 'third': thirdPlaceCount,\n        'winnings': winningsCount, 'losses': lossesCount }\n\n      if (fourth === name) {\n        fourthPlaceCount += 1\n        lossesCount += game.buyIn \n      } playerObj = { ...playerObj, 'fourth': fourthPlaceCount, 'losses': lossesCount }\n      \n      if (fifth === name) {\n        fifthPlaceCount += 1\n        lossesCount += game.buyIn\n      } playerObj = { ...playerObj, 'fifth': fifthPlaceCount, 'losses': lossesCount }\n    \n      if (sixth === name) {\n        sixthPlaceCount += 1\n        lossesCount += game.buyIn\n      } playerObj = { ...playerObj, 'sixth': sixthPlaceCount, 'losses': lossesCount }\n      \n      if (seventh === name) {\n        seventhPlaceCount += 1\n        lossesCount += game.buyIn\n      } playerObj = { ...playerObj, 'seventh': seventhPlaceCount, 'losses': lossesCount }\n      \n      if (eighth === name) {\n        eighthPlaceCount += 1\n        lossesCount += game.buyIn\n      } playerObj = { ...playerObj, 'eighth': eighthPlaceCount, 'losses': lossesCount }\n\n      if (ninth === name) {\n        ninthPlaceCount += 1\n        lossesCount += game.buyIn\n      } playerObj = { ...playerObj, 'ninth': ninthPlaceCount, 'losses': lossesCount }\n    })\n\n    // Getting the profit/loss (total) and the number of games played\n\n    const total = playerObj.winnings - playerObj.losses\n    const gameCount = firstPlaceCount + secondPlaceCount + thirdPlaceCount + fourthPlaceCount +\n    fifthPlaceCount + sixthPlaceCount + seventhPlaceCount + eighthPlaceCount + ninthPlaceCount\n\n    // Getting the average\n\n    const average = (total / gameCount).toFixed(1)\n\n    // Putting data in playerObj, also working out percentages and dealing with the formatting\n    // of minus numbers.\n\n    playerObj = { ...playerObj, 'total': minusFormatting(total), gamesPlayed: gameCount, \n      topTwoPercentage: percentage(playerObj.first + playerObj.second, gameCount),\n      average: minusFormatting(average) }\n\n    if (playerObj.gamesPlayed === 0) {\n      playerObj = { ...playerObj, average: '-', topTwoPercentage: '-', 'total': '-' }\n    }\n  \n    newData.push(playerObj)\n  })\n  return newData\n}","// Functions that sort the leaderboard player stats\n\nexport function alphaSort(playerStats) {\n  playerStats.sort(function(a, b) {\n    const playerA = a.name.toUpperCase()\n    const playerB = b.name.toUpperCase() \n    if (playerA < playerB) {\n      return -1\n    }\n    if (playerA > playerB) {\n      return 1\n    }\n    return 0\n  })\n  return playerStats\n}\n\nexport function gamesPlayedSort (playerStats) {\n  playerStats.sort(function(a, b) {\n    const playerA = a.gamesPlayed\n    const playerB = b.gamesPlayed\n\n    if (playerA < playerB) {\n      return 1\n    }\n    if (playerA > playerB) {\n      return -1\n    }\n  })\n  return playerStats\n}\n\nexport function totalSort(playerStats) {\n  playerStats.sort(function(a, b) {\n    const playerA = a.winnings - a.losses\n    const playerB = b.winnings - b.losses\n    if (playerA < playerB) {\n      return 1\n    }\n    if (playerA > playerB) {\n      return -1\n    }\n\n    return 0\n  })\n  return playerStats\n}\n\nexport function topTwoSort(playerStats) {\n  playerStats.sort(function(a, b) {\n    const playerA = parseInt(a.topTwoPercentage.trim('%'))\n    const playerB = parseInt(b.topTwoPercentage.trim('%'))\n\n    if (playerA < playerB) {\n      return 1\n    }\n    if (playerA > playerB) {\n      return -1\n    }\n    if (isNaN(playerA)) {\n      return 1\n    }\n    return 0\n  })\n  return playerStats\n}\n\nexport function mostRecentSort(games, field) {\n  games.sort(function(a, b) {\n    const playerA = a[field]\n    const playerB = b[field]\n    if (playerA < playerB) {\n      return 1\n    }\n    if (playerA > playerB) {\n      return -1\n    }\n  })\n  return games\n}","import React from 'react'\nimport { Button } from 'react-bootstrap'\nimport { deleteGame } from '../../lib/api'\nimport { Link } from 'react-router-dom'\nimport { Modal, Container, Row, Col } from 'react-bootstrap'\n\n\nfunction GameCard({ game, refetchData }) {\n  const [show, setShow] = React.useState(false)\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  const handleDelete = async e => {\n    e.preventDefault()\n    try {\n      await deleteGame(game.id)\n      await refetchData()\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  return (\n    <>\n      <div className=\"game-box\" key={game.id}>\n        <div className=\"row\">\n          <div className=\"col-sm-4 center-flex\"><h5>{game.date}</h5></div>\n          <div className=\"col-sm-4 center-flex\"><h5>£{game.numberOfPlayers * game.buyIn}</h5></div>\n          <div className=\"col-sm-4 center-flex\"><h5>{game.firstPlace.name}</h5></div>\n          <div className=\"col-sm-12 center-flex\">\n            <Button variant=\"none\" className=\"btn-default btn-sm\" onClick={handleShow}>View Game</Button>\n            <Link to={{ pathname: '/editgame', state: { game: game.id } }}>\n              <Button variant=\"none\" className=\"btn-default btn-sm edit-button\">Edit Game</Button>\n            </Link>\n            <Button variant=\"none\" className=\"btn-default btn-sm\" onClick={handleDelete}>Delete Game</Button>\n          </div>\n        </div>\n      </div>\n      \n      <Modal show={show} size=\"lg\"\n        key={game.name} centered>\n        <Modal.Header>\n          <Modal.Title class=\"text-capitalize\">{game.name} ({game.date})</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <Col xs={6} md={6}>\n                <p>Winner: {game.firstPlace.name} (£{game.prizeForFirst})</p>\n                <p>Runner up: {game.secondPlace.name} (£{game.prizeForSecond})</p>\n                <p>Third: {game.thirdPlace.name} (£{game.prizeForThird})</p>\n                {game.fourthPlace && <p>Fourth: {game.fourthPlace.name}</p>}\n                {game.fifthPlace && <p>Fifth: {game.fifthPlace.name}</p>}\n              </Col>\n              <Col xs={6} md={6}>\n                {game.sixthPlace && <p>Sixth: {game.sixthPlace.name}</p>}\n                {game.seventhPlace && <p>Seventh: {game.seventhPlace.name}</p>}\n                {game.eighthPlace && <p>Eighth: {game.eighthPlace.name}</p>}\n                {game.ninthPlace && <p>Ninth: {game.ninthPlace.name}</p>}\n              </Col>\n            </Row>\n          </Container>\n        </Modal.Body>\n        <Modal.Footer>\n          <Col xs={12} md={10}>\n            <p>Buy In: £{game.buyIn}</p>\n            <p>Prize Pool: £{game.prizeForFirst + game.prizeForSecond + game.prizeForThird}</p>\n          </Col>\n          <Button variant=\"none\" className=\"btn-default\" onClick={handleClose}>\n          Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default GameCard","import React from 'react'\n\nfunction EmptyGameCard() {\n\n  return (\n    <>\n      <div className=\"game-box\">\n        <div className=\"row\">\n          <div className=\"col-sm-4 center-flex\"><h5></h5></div>\n          <div className=\"col-sm-4 center-flex\"><h6></h6></div>\n          <div className=\"col-sm-4 center-flex\"><h6></h6></div>\n          <div className=\"col-sm-12 center-flex\">\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default EmptyGameCard","import React from 'react'\nimport GameCard from '../cards/GameCard'\nimport EmptyGameCard from '../cards/EmptyGameCard'\nimport { mostRecentSort } from '../../lib/filterFunctions'\n\nfunction GameList({ games, refetchData, gameHistory }) {\n\n  return (\n    <>\n      {games && gameHistory === 0 && mostRecentSort(games, 'id').slice(0, 8)\n        .map(game => <GameCard key={game.id} game={game} refetchData={refetchData}/>\n        )}\n      {games && gameHistory === 1 && mostRecentSort(games, 'id').slice(8, 16)\n        .map(game => <GameCard key={game.id} game={game} refetchData={refetchData}/>\n        )}\n      {games && gameHistory === 2 && mostRecentSort(games, 'id').slice(16, 24)\n        .map(game => <GameCard key={game.id} game={game} refetchData={refetchData}/>\n        )}\n      {games && gameHistory === 3 && mostRecentSort(games, 'id').slice(24, 32)\n        .map(game => <GameCard key={game.id} game={game} refetchData={refetchData}/>\n        )}\n      {games &&\n      <>\n        {(games.length === 1 || gameHistory === 1 && games.length === 9 || gameHistory === 2 && games.length === 17) &&\n      <>\n        <EmptyGameCard />\n        <EmptyGameCard />\n        <EmptyGameCard />\n        <EmptyGameCard />\n        <EmptyGameCard />\n        <EmptyGameCard />\n        <EmptyGameCard />\n      </>} \n        {(games.length === 2 || gameHistory === 1 && games.length === 10 || gameHistory === 2 && games.length === 18) &&\n      <>\n        <EmptyGameCard />\n        <EmptyGameCard />\n        <EmptyGameCard />\n        <EmptyGameCard />\n        <EmptyGameCard />\n        <EmptyGameCard />\n      </>} \n        {(games && games.length === 3 || gameHistory === 1 && games.length === 11 || gameHistory === 2 && games.length === 19) &&\n      <>\n        <EmptyGameCard />\n        <EmptyGameCard />\n        <EmptyGameCard />\n        <EmptyGameCard />\n        <EmptyGameCard />\n      </>} \n        {(games.length === 4 || gameHistory === 1 && games.length === 12 \n      || gameHistory === 2 && games.length === 20) &&\n      <>\n        <EmptyGameCard />\n        <EmptyGameCard />\n        <EmptyGameCard />\n        <EmptyGameCard />\n      </>} \n        {(games.length === 5 || gameHistory === 1 && games.length === 13 \n        || gameHistory === 2 && games.length === 21) &&\n      <>\n        <EmptyGameCard />\n        <EmptyGameCard />\n        <EmptyGameCard />\n      </>} \n        {(games.length === 6 || gameHistory === 1 && games.length === 14 \n        || gameHistory === 2 && games.length === 22) &&\n      <>\n        <EmptyGameCard />\n        <EmptyGameCard />\n      </>} \n        {(games.length === 7 || gameHistory === 1 && games.length === 15 \n        || gameHistory === 2 && games.length === 23) &&\n      <>\n        <EmptyGameCard />\n      </>} \n      </>}\n    </>\n  )\n}\n\nexport default GameList","function Loading() {\n  return <h1>Loading...</h1>\n}\n\nexport default Loading","function NoPlayers() {\n  return <h1>Please Add Players...</h1>\n}\n\nexport default NoPlayers","import React from 'react'\n\nimport { Table } from 'react-bootstrap'\nimport Loading from './Loading'\nimport NoPlayers from './NoPlayers'\n\nfunction Leaderboard({ filteredStats, playerStats }) {\n  return (\n    <>\n      <div style={{ marginBottom: '-15px' }}>\n        {!playerStats && <Loading />}\n        {playerStats && playerStats.length < 1 && <NoPlayers />}\n        {playerStats && playerStats.length > 0 &&\n        <>  \n          <Table className=\"table table-bordered\" striped bordered hover>\n            <thead>\n              <tr >\n                <th style={{ height: '30px' }}>Name</th>\n                <th>Games Played</th>\n                <th>Top Two Percentage</th>\n                <th>Total Won</th>\n                <th>Total Spent</th>\n                <th>Profit/loss</th>\n                <th>Per game</th>\n              </tr>\n            </thead>\n            <tbody>\n              {!filteredStats && playerStats.map(player =>\n                <tr key={player.name}>\n                  <td>{player.name}</td>\n                  <td>{player.gamesPlayed === 0 ? '-' : player.gamesPlayed}</td>\n                  <td>{player.topTwoPercentage}</td>\n                  <td>{player.winnings ? `£${player.winnings}` : '-'}</td>\n                  <td>{player.losses ? `£${player.losses}` : '-'}</td>\n                  <td>{player.total}</td>\n                  <td>{player.average}</td>\n                </tr>\n              ).slice(0, 14)}\n              {filteredStats && filteredStats.map(player =>\n                <tr key={player.name}>\n                  <td>{player.name}</td>\n                  <td>{player.gamesPlayed === 0 ? '-' : player.gamesPlayed}</td>\n                  <td>{player.topTwoPercentage}</td>\n                  <td>{player.winnings ? `£${player.winnings}` : '-'}</td>\n                  <td>{player.losses ? `£${player.losses}` : '-'}</td>\n                  <td>{player.total}</td>\n                  <td>{player.average}</td>\n                </tr>\n              ).slice(0, 14)}\n            </tbody>\n          </Table>\n        </>\n        }\n      </div>\n    </>\n  )\n}\n\nexport default Leaderboard","import React, { useCallback } from 'react'\nimport { Button, Dropdown, Image } from 'react-bootstrap'\nimport { getAllGames, getAllPlayers } from '../../lib/api'\nimport { Link } from 'react-router-dom'\nimport NoGames from './NoGames'\nimport { statify } from '../../lib/helpers'\nimport { alphaSort, gamesPlayedSort, totalSort, topTwoSort } from '../../lib/filterFunctions'\nimport { getPayLoad } from '../../lib/auth'\n\nimport GameList from './GameList'\nimport Leaderboard from './Leaderboard'\nimport Loading from './Loading'\n\nfunction Dashboard() {\n  const [games, setGames] = React.useState(null)\n  const [players, setPlayers] = React.useState(null)\n  const [playerStats, setPlayerStats] = React.useState(null)\n  const [filteredStats, setFilteredStats] = React.useState(null)\n  const [gameHistory, setGameHistory] = React.useState(0)\n  const [userId, setUserId] = React.useState(null)\n\n  const [unfilteredGames, setunfilteredGames] = React.useState(null)\n  const [unfilteredPlayers, setunfilteredPlayers] = React.useState(null)\n\n  const getData = async () => {\n    try {\n      const gameRes = await getAllGames()\n      const playerRes = await getAllPlayers()\n      setunfilteredGames(gameRes.data)\n      setunfilteredPlayers(playerRes.data)\n      const payLoad = getPayLoad()\n      const user = payLoad.sub\n      setUserId(user)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n\n  React.useEffect(() => {\n    getData()\n  }, [])\n\n  React.useEffect(() => {\n    const filterForId = async () => {\n      try {\n        setGames(unfilteredGames.filter(game => game.userId === userId))\n        setPlayers(unfilteredPlayers.filter(game => game.userId === userId))\n      } catch (err) {\n        console.log(err)\n      }\n    }\n    filterForId()\n  }, [unfilteredGames, userId, unfilteredPlayers])\n\n  React.useEffect(() => {\n    const filterForId = async () => {\n      try {\n        setPlayerStats(alphaSort(statify(games, players)))\n      } catch (err) {\n        console.log(err)\n      }\n    }\n    filterForId()\n  }, [games, players])\n\n  const toggleFilter = useCallback(event => {\n    const value = event.target.target\n    if (value === 'alpha') setFilteredStats(alphaSort(playerStats))\n    if (value === 'gamesPlayed') setFilteredStats(gamesPlayedSort(playerStats))\n    if (value === 'total') setFilteredStats(totalSort(playerStats))\n    if (value === 'topTwoPercentage') setFilteredStats(topTwoSort(playerStats))\n  })\n\n  React.useEffect(() => {\n    setFilteredStats()\n  }, [toggleFilter])\n  \n  const handleBackward = () => {\n    if (gameHistory === 3) setGameHistory(2)\n    if (gameHistory === 2) setGameHistory(1)\n    if (gameHistory === 1) setGameHistory(0)\n    \n  }\n\n  const handleForward = () => {\n    if (gameHistory === 0 && games.length > 8 ) {\n      setGameHistory(1)\n    }\n    if (gameHistory === 1 && games.length > 16 ) {\n      setGameHistory(2)\n    }\n    if (gameHistory === 2 && games.length > 24 ) {\n      setGameHistory(3)\n    }\n  }\n  \n  return (\n    <div className=\"the-back off-white\">\n      <div className=\"dash-wrap off-white\">\n        <div className=\"container dash-left\">\n          <section className=\"container button-wrap\">\n            <Link to=\"/addplayer\" userId={userId}>\n              <Button variant=\"none\" className=\"button-height btn-default\">\n              Add Player\n              </Button>\n            </Link>\n            <Link to=\"/addgame\" players={players}>\n              <Button variant=\"none\" className=\"button-height btn-default\">\n                Add Game\n              </Button>\n            </Link>\n          </section>\n          <section className={`${games < 1 ? 'no-game-flex game-list-wrap light-grey' :\n            'game-list-wrap light-grey'}`}>\n            {!games && <Loading />}\n            {games && games < 1 && <NoGames />}\n            <GameList games={games} gameHistory={gameHistory} refetchData={getData}/>\n          </section>\n          {games && games < 1 && (\n            <div className=\"card-wrap\">\n              <Image \n                height=\"400px\" \n                src=\"https://i.ibb.co/p4qvTsh/cards.png\" \n                className=\"card-img\" \n                alt=\"cards\" \n                border=\"0\"/>\n            </div>)}\n          {(games && games.length > 0) &&\n          <div className='game-browse-buttons'>\n            <>\n              {gameHistory > 0 ? \n                <Button variant=\"none\"\n                  onClick={handleBackward}\n                  className=\"button-height btn-default\">\n                Back\n                </Button> : \n                <Button\n                  variant=\"dark\"\n                  className=\"button-height\">\n                Back\n                </Button>}\n              {games &&\n            <>\n              {(gameHistory === 0 && games.length < 9 \n                || gameHistory === 1 && games.length < 18 \n                || gameHistory === 2 && games.length < 27) ? \n                <Button \n                  variant=\"dark\" \n                  className=\"button-height forward-button\"\n                >\n                Forward\n                </Button> : \n                <Button \n                  variant=\"none\" \n                  onClick={handleForward} \n                  className=\"button-height btn-default forward-button\"\n                >\n                Forward\n                </Button>}\n            </>}\n            </>\n          </div>}\n        </div>\n        <div className=\"container dash-right\">\n          <section className=\"container spacing\">\n            <Dropdown>\n              <Dropdown.Toggle \n                variant=\"none\" \n                id=\"dropdown-basic\"  \n                className=\"button-height btn-default\"\n              >\n                Order By\n              </Dropdown.Toggle>\n              <Dropdown.Menu onClick={toggleFilter}>\n                <Dropdown.Item target='alpha'>Alphabetical</Dropdown.Item>\n                <Dropdown.Item target='gamesPlayed'>Games Played</Dropdown.Item>\n                <Dropdown.Item target='total'>Profit/Loss</Dropdown.Item>\n                <Dropdown.Item target='topTwoPercentage'>Top Two Percentage</Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </section>\n          <section \n            className=\n              {`${playerStats && playerStats.length < 1 ? 'no-game-flex container leaderboard-wrap light-grey'\n                : 'container leaderboard-wrap light-grey'}`}\n            style={ games && games.length < 1 ? { height: 'auto' } : { }}>\n            <Leaderboard \n              playerStats={playerStats} \n              filteredStats={filteredStats}/>\n          </section>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Dashboard","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Form, Button, Container, Col, Row } from 'react-bootstrap'\nimport { createPlayer } from '../../lib/api'\nimport { getPayLoad } from '../../lib/auth'\n\nfunction PlayerAdd() {\n\n  const initialState = {\n    name: '',\n    image: '',\n    userId: '',\n  }\n\n  const history = useHistory()\n  const [formData, setFormData] = React.useState(initialState)\n  const [isError, setIsError] = React.useState(false)\n  const [formErrors, setFormErrors] = React.useState(initialState)\n  const [userId, setUserId] = React.useState(null)\n\n  const getData = async () => {\n    try {\n      const payLoad = getPayLoad()\n      const user = payLoad.sub\n      setUserId(user)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  React.useEffect(() => {\n    getData()\n  }, [])\n\n  const handleChange = e => {\n    setFormData({ ...formData, [e.target.name]: e.target.value })\n    setFormErrors({ ...formErrors, [e.target.name]: '' })\n    console.log(formData)\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      await createPlayer({ ...formData, userId: userId })\n      history.push('/dashboard')\n    } catch (err) {\n      setIsError(true)\n    }\n  }\n\n  return (\n    <>\n      <Container className=\"login\" fluid>\n        <Row>\n          <Col className=\"outer-col\"></Col>\n          <Col xs={4} className=\"form-vertical-align\">\n            <Form onSubmit={handleSubmit}>\n              <h2>Add Player</h2>\n              <Form.Group className=\"mb-3\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Player Name\"\n                  name=\"name\"\n                  onChange={handleChange}\n                />\n              </Form.Group>\n              <Form.Group className=\"mb-3\">\n                <Form.Label>Image (optional)</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Player Image\"\n                  name=\"image\"\n                  onChange={handleChange}\n                />\n              </Form.Group>\n              <Form.Group className=\"mb-3\">\n                {isError && (\n                  <Form.Text className=\"text-muted\">\n                    Player name already in use, please choose another.\n                  </Form.Text>\n                )}\n              </Form.Group>\n              <Button variant=\"none\" className=\"btn-default\" type=\"submit\">\n                Create Player\n              </Button>\n            </Form>\n          </Col>\n          <Col className=\"outer-col\"></Col>\n        </Row>\n      </Container>\n    </>\n  )\n}\n\nexport default PlayerAdd","import React from 'react'\nimport Form from 'react-bootstrap/Form'\nimport { Button, Container, Col, Row } from 'react-bootstrap'\nimport { createGame, getAllPlayers } from '../../lib/api'\nimport { useForm } from 'react-hook-form'\nimport { useHistory } from 'react-router-dom'\nimport { getPayLoad } from '../../lib/auth'\n\nfunction GameAdd() {\n  const { register, handleSubmit } = useForm()\n  const [payoutsKnown, setPayoutsKnown] = React.useState(false)\n  const [playerNumKnown, setPlayerNumKnown] = React.useState(false)\n  const [buyinKnown, setBuyinKnown] = React.useState(false)\n  const [formData, setFormData] = React.useState({\n    prizeForFirst: 0,\n    prizeForSecond: 0,\n    prizeForThird: 0,\n    buyIn: '',\n    numberOfPlayers: 3,\n    userId: '',\n    firstPlace: '',\n    secondPlace: '',\n    thirdPlace: '',\n    fourthPlace: '',\n    fifthPlace: '',\n    sixthPlace: '',\n    seventhPlace: '',\n    eighthPlace: '',\n    ninthPlace: '',\n  })\n  const [formErrors, setFormErrors] = React.useState({\n    firstPlace: '',\n    secondPlace: '',\n    thirdPlace: '',\n    fourthPlace: '',\n    fifthPlace: '',\n    sixthPlace: '',\n    seventhPlace: '',\n    eighthPlace: '',\n    ninthPlace: '',\n    name: '',\n    date: '',\n  })\n  const [isError, setIsError] = React.useState(false)\n  const [playerList, setPlayerList] = React.useState(null)\n  const history = useHistory()\n  const [totalPotDifference, setTotalPotDifference] = React.useState(null)\n  const [userId, setUserId] = React.useState(null)\n\n  React.useEffect(() => {\n    const getData = async () => {\n      const playerData = await getAllPlayers()\n      const payLoad = getPayLoad()\n      const user = payLoad.sub\n      setUserId(user)\n      setPlayerList(playerData.data)\n      console.log(playerData.data)\n    }\n    getData()\n  }, [])\n\n  const handleSub = (event) => {\n    setIsError(false)\n    event.preventDefault()\n    const name = event.target.name \n\n    if (name === 'numberOfPlayers' && formData[name]) {\n      setPlayerNumKnown(true)\n    } \n\n    if (name === 'buyIn' && formData[name] > 0) {\n      setBuyinKnown(true)\n    } else if (name === 'buyIn'){\n      setIsError(true)\n    }\n\n    if (name === 'winnings') {\n      if (parseInt(formData['prizeForFirst']) + parseInt(formData['prizeForSecond']) + parseInt(formData['prizeForThird']) \n      === (parseInt(formData['buyIn']) * parseInt(formData['numberOfPlayers']))) {\n        setPayoutsKnown(true)\n      } else {\n        setTotalPotDifference((parseInt(formData['prizeForFirst']) + parseInt(formData['prizeForSecond']) + parseInt(formData['prizeForThird'])) \n        - ((parseInt(formData['buyIn']) * parseInt(formData['numberOfPlayers']))))\n        setIsError(true)\n      }\n    }\n  }\n\n  const handleChange = (event) => {\n    const value = event.target.value\n    setFormData({ ...formData, [event.target.name]: value })\n    console.log(formData)\n  }\n\n  const mergeThenSend = async (rankingsData) => {\n    rankingsData = { ...rankingsData, ...formData, userId: userId }\n    console.log(rankingsData)\n    try {\n      await createGame(rankingsData)\n      history.push('/dashboard')\n    } catch (err) {\n      setFormErrors(err.response.data)\n    }\n  }\n  \n  return (\n    <Container className=\"login\" fluid>\n      <Row>\n        <Col className=\"outer-col\"></Col>\n        <Col xs={4} className=\"form-vertical-align\">\n          <div className='log-game-form-wrap'>\n            <h2>Add New Game</h2>\n            \n            {!playerNumKnown && \n        <Form name=\"numberOfPlayers\" onSubmit={handleSub}>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>How many players in your game?</Form.Label>\n            <Form.Control\n              as=\"select\"\n              name=\"numberOfPlayers\"\n              onChange={handleChange}>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n              <option value=\"9\">9</option>\n            </Form.Control>\n          </Form.Group>\n          <Button variant=\"none\" className=\"btn-default\" type=\"submit\">\n            Next\n          </Button>\n        </Form>\n            }\n\n            {!buyinKnown && playerNumKnown &&\n          <Form name=\"buyIn\" onSubmit={handleSub}>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>What is the buy-in?</Form.Label>\n              <Form.Control \n                type=\"number\"\n                className={isError ? 'is-invalid' : ''}\n                placeholder=\"Buy-in amount\" \n                name=\"buyIn\"\n                onChange={handleChange}/>\n              {isError && (\n                <Form.Text className=\"text-muted\">\n                      Please enter a valid buy-in\n                </Form.Text>\n              )}  \n            </Form.Group>\n\n            <Button \n              variant=\"none\" \n              className=\"btn-default\" \n              type=\"submit\"\n            >\n              Next\n            </Button>\n          </Form>\n            }\n\n            {playerNumKnown && buyinKnown && !payoutsKnown &&\n          <Form name=\"winnings\" onSubmit={handleSub}>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Prize for First</Form.Label>\n              <Form.Control \n                type=\"text\"\n                className={isError ? 'is-invalid' : ''}\n                placeholder=\"Prize for First\" \n                name=\"prizeForFirst\"\n                onChange={handleChange}/>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Prize for Second</Form.Label>\n              <Form.Control\n                type=\"text\"\n                className={isError ? 'is-invalid' : ''}\n                placeholder=\"Prize for Second\"\n                name=\"prizeForSecond\"\n                onChange={handleChange}/>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Prize for Third</Form.Label>\n              <Form.Control \n                type=\"text\"\n                className={isError ? 'is-invalid' : ''}\n                placeholder=\"Prize for Third\"\n                name=\"prizeForThird\"\n                onChange={handleChange}/>\n              {isError && (\n                <Form.Text className=\"text-muted\">\n                  {totalPotDifference > 0 ? `Your payouts are £${totalPotDifference} bigger than the prize pool` \n                    : `Your payouts are £${totalPotDifference * -1} smaller than the prize pool` }\n                </Form.Text>\n              )}  \n            </Form.Group>\n\n            <Button \n              variant=\"none\" \n              className=\"btn-default\" \n              type=\"submit\"\n            >\n              Next\n            </Button>\n          </Form>\n            }\n\n            {playerNumKnown && buyinKnown && payoutsKnown &&\n          <Form name=\"players\" onSubmit={handleSubmit(mergeThenSend)}>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>First Place</Form.Label>\n              <Form.Control\n                as=\"select\"\n                className={`${formErrors['firstPlace'] ? 'is-invalid' : ''}`}\n                {...register('firstPlace', { required: true })}\n                name=\"firstPlace\"\n                defaultValue=\"def\"\n                onChange={handleChange}>\n                <option value=\"def\" disabled hidden>Select player</option>\n                {playerList.filter(player => player.userId === userId)\n                  .filter(player => player.id !== parseInt(formData.secondPlace) && player.id !== parseInt(formData.thirdPlace) && \n                player.id !== parseInt(formData.fourthPlace) && player.id !== parseInt(formData.fifthPlace) && player.id !== parseInt(formData.sixthPlace) && \n                player.id !== parseInt(formData.seventhPlace) && player.id !== parseInt(formData.eighthPlace) && player.id !== parseInt(formData.ninthPlace))\n                  .map(player => (\n                    <option key={player.id} value={player.id}>{player.name}</option>\n                  ))}\n              </Form.Control>\n              {formErrors['firstPlace'] && (\n                <Form.Text \n                  className=\"text-muted\">A player is required\n                </Form.Text>\n              )}\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Second Place</Form.Label>\n              <Form.Control\n                as=\"select\"\n                className={`${formErrors['secondPlace'] ? 'is-invalid' : ''}`}\n                defaultValue=\"def\"\n                {...register('secondPlace', { required: true })}\n                name=\"secondPlace\"\n                onChange={handleChange}>\n                <option value=\"def\" disabled hidden>Select player</option>\n                {playerList.filter(player => player.userId === userId)\n                  .filter(player => player.id !== parseInt(formData.firstPlace) && player.id !== parseInt(formData.thirdPlace) && \n                player.id !== parseInt(formData.fourthPlace) && player.id !== parseInt(formData.fifthPlace) && player.id !== parseInt(formData.sixthPlace) && \n                player.id !== parseInt(formData.seventhPlace) && player.id !== parseInt(formData.eighthPlace) && player.id !== parseInt(formData.ninthPlace))\n                  .map(player => (\n                    <option key={player.id} value={player.id}>{player.name}</option>\n                  ))}\n              </Form.Control>\n              {formErrors['secondPlace'] && (\n                <Form.Text \n                  className=\"text-muted\">A player is required\n                </Form.Text>\n              )}\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Third Place</Form.Label>\n              <Form.Control\n                as=\"select\"\n                className={`${formErrors['thirdPlace'] ? 'is-invalid' : ''}`}\n                defaultValue=\"def\"\n                name=\"thirdPlace\"\n                {...register('thirdPlace', { required: true })}\n                onChange={handleChange}>\n                <option value=\"def\" disabled hidden>Select player</option>\n                {playerList.filter(player => player.userId === userId)\n                  .filter(player => player.id !== parseInt(formData.firstPlace) && player.id !== parseInt(formData.secondPlace) &&\n                player.id !== parseInt(formData.fourthPlace) && player.id !== parseInt(formData.fifthPlace) && player.id !== parseInt(formData.sixthPlace) && \n                player.id !== parseInt(formData.seventhPlace) && player.id !== parseInt(formData.eighthPlace) && player.id !== parseInt(formData.ninthPlace))\n                  .map(player => (\n                    <option key={player.id} value={player.id}>{player.name}</option>\n                  ))}\n              </Form.Control>\n              {formErrors['thirdPlace'] && (\n                <Form.Text \n                  className=\"text-muted\">A player is required\n                </Form.Text>\n              )}\n            </Form.Group>\n\n            {formData.numberOfPlayers > 3 &&\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Fourth Place</Form.Label>\n              <Form.Control\n                as=\"select\"\n                className={`${formErrors['fourthPlace'] ? 'is-invalid' : ''}`}\n                defaultValue=\"def\"\n                name=\"fourthPlace\"\n                {...register('fourthPlace', { required: true })}\n                onChange={handleChange}>\n                <option value=\"def\" disabled hidden>Select player</option>\n                {playerList.filter(player => player.userId === userId)\n                  .filter(player => player.id !== parseInt(formData.firstPlace) && player.id !== parseInt(formData.secondPlace) && player.id !== parseInt(formData.thirdPlace) && \n                  player.id !== parseInt(formData.fifthPlace) && player.id !== parseInt(formData.sixthPlace) && \n                  player.id !== parseInt(formData.seventhPlace) && player.id !== parseInt(formData.eighthPlace) && player.id !== parseInt(formData.ninthPlace))\n                  .map(player => (\n                    <option key={player.id} value={player.id}>{player.name}</option>\n                  ))}\n              </Form.Control>\n              {formErrors['fourthPlace'] && (\n                <Form.Text \n                  className=\"text-muted\">A player is required\n                </Form.Text>\n              )}\n            </Form.Group>\n            }\n            {formData.numberOfPlayers > 4 &&\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Fifth Place</Form.Label>\n              <Form.Control\n                as=\"select\"\n                name=\"fifthPlace\"\n                className={`${formErrors['fifthPlace'] ? 'is-invalid' : ''}`}\n                defaultValue=\"def\"\n                {...register('fifthPlace', { required: true })}\n                onChange={handleChange}>\n                <option value=\"def\"  disabled hidden>Select player</option>\n                {playerList.filter(player => player.userId === userId)\n                  .filter(player => player.id !== parseInt(formData.firstPlace) && player.id !== parseInt(formData.secondPlace) && player.id !== parseInt(formData.thirdPlace) && \n                  player.id !== parseInt(formData.fourthPlace) && player.id !== parseInt(formData.sixthPlace) && \n                  player.id !== parseInt(formData.seventhPlace) && player.id !== parseInt(formData.eighthPlace) && player.id !== parseInt(formData.ninthPlace))\n                  .map(player => (\n                    <option key={player.id} value={player.id}>{player.name}</option>\n                  ))}\n              </Form.Control>\n              {formErrors['fifthPlace'] && (\n                <Form.Text \n                  className=\"text-muted\">A player is required\n                </Form.Text>\n              )}\n            </Form.Group>\n            }\n            {formData.numberOfPlayers > 5 &&\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Sixth Place</Form.Label>\n              <Form.Control\n                as=\"select\"\n                defaultValue=\"def\"\n                name=\"sixthPlace\"\n                className={`${formErrors['sixthPlace'] ? 'is-invalid' : ''}`}\n                {...register('sixthPlace', { required: true })}\n                onChange={handleChange}>\n                <option value=\"def\" disabled hidden>Select player</option>\n                {playerList.filter(player => player.userId === userId)\n                  .filter(player => player.id !== parseInt(formData.firstPlace) && player.id !== parseInt(formData.secondPlace) &&\n                player.id !== parseInt(formData.fourthPlace) && player.id !== parseInt(formData.fifthPlace && player.id !== parseInt(formData.thirdPlace) && \n                player.id !== parseInt(formData.seventhPlace) && player.id !== parseInt(formData.eighthPlace) && player.id !== parseInt(formData.ninthPlace)))\n                  .map(player => (\n                    <option key={player.id} value={player.id}>{player.name}</option>\n                  ))}\n              </Form.Control>\n              {formErrors['sixthPlace'] && (\n                <Form.Text \n                  className=\"text-muted\">A player is required\n                </Form.Text>\n              )}\n            </Form.Group>\n            }\n            {formData.numberOfPlayers > 6 &&\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Seventh Place</Form.Label>\n              <Form.Control\n                as=\"select\"\n                defaultValue=\"def\"\n                className={`${formErrors['seventhPlace'] ? 'is-invalid' : ''}`}\n                name=\"seventhPlace\"\n                {...register('seventhPlace', { required: true })}\n                onChange={handleChange}>\n                <option value=\"def\" disabled hidden>Select player</option>\n                {playerList.filter(player => player.userId === userId)\n                  .filter(player => player.id !== parseInt(formData.firstPlace) && player.id !== parseInt(formData.secondPlace) &&\n                player.id !== parseInt(formData.fourthPlace) && player.id !== parseInt(formData.fifthPlace) && player.id !== parseInt(formData.sixthPlace) && \n                player.id !== parseInt(formData.thirdPlace) && player.id !== parseInt(formData.eighthPlace) && player.id !== parseInt(formData.ninthPlace))\n                  .map(player => (\n                    <option key={player.id} value={player.id}>{player.name}</option>\n                  ))}\n              </Form.Control>\n              {formErrors['seventhPlace'] && (\n                <Form.Text \n                  className=\"text-muted\">A player is required\n                </Form.Text>\n              )}\n            </Form.Group>\n            }\n            {formData.numberOfPlayers > 7 &&\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Eighth Place</Form.Label>\n              <Form.Control\n                as=\"select\"\n                className={`${formErrors['eighthPlace'] ? 'is-invalid' : ''}`}\n                defaultValue=\"def\"\n                name=\"eighthPlace\"\n                {...register('eighthPlace', { required: true })}\n                onChange={handleChange}>\n                <option value=\"def\" disabled hidden>Select player</option>\n                {playerList.filter(player => player.userId === userId)\n                  .filter(player => player.id !== parseInt(formData.firstPlace) && player.id !== parseInt(formData.secondPlace) &&\n                player.id !== parseInt(formData.fourthPlace) && player.id !== parseInt(formData.fifthPlace) && player.id !== parseInt(formData.sixthPlace) && \n                player.id !== parseInt(formData.seventhPlace) && player.id !== parseInt(formData.thirdPlace) && player.id !== parseInt(formData.ninthPlace))\n                  .map(player => (\n                    <option key={player.id} value={player.id}>{player.name}</option>\n                  ))}\n              </Form.Control>\n              {formErrors['eighthPlace'] && (\n                <Form.Text className=\"text-muted\">A player is required</Form.Text>\n              )}\n            </Form.Group>\n            }\n            {formData.numberOfPlayers > 8 &&\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Ninth Place</Form.Label>\n              <Form.Control\n                as=\"select\"\n                className={`${formErrors['ninthPlace'] ? 'is-invalid' : ''}`}\n                name=\"ninthPlace\"\n                defaultValue=\"def\"\n                {...register('ninthPlace', { required: true })}\n                onChange={handleChange}>\n                <option value=\"def\" disabled hidden>Select player</option>\n                {playerList.filter(player => player.userId === userId)\n                  .filter(player => player.id !== parseInt(formData.firstPlace) && player.id !== parseInt(formData.secondPlace) &&\n                player.id !== parseInt(formData.fourthPlace) && player.id !== parseInt(formData.fifthPlace) && player.id !== parseInt(formData.sixthPlace) && \n                player.id !== parseInt(formData.seventhPlace) && player.id !== parseInt(formData.eighthPlace) && player.id !== parseInt(formData.thirdPlace))\n                  .map(player => (\n                    <option key={player.id} value={player.id}>{player.name}</option>\n                  ))}\n              </Form.Control>\n              {formErrors['ninthPlace'] && (\n                <Form.Text className=\"text-muted\">A player is required</Form.Text>\n              )}\n            </Form.Group>\n            }\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Date</Form.Label>\n              <Form.Control\n                type=\"text\" \n                className={`${formErrors['date'] ? 'is-invalid' : ''}`}\n                placeholder=\"Date\"\n                name=\"date\" \n                {...register('date')}\n              />\n              {formErrors['date'] && (\n                <Form.Text \n                  className=\"text-muted\">A valid date is required\n                </Form.Text>\n              )}\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Game name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                className={`${formErrors['name'] ? 'is-invalid' : ''}`}\n                placeholder=\"Game name\"\n                name=\"name\" \n                {...register('name')}\n              />\n              {formErrors['name'] && (\n                <Form.Text \n                  className=\"text-muted\">A name is required for the game\n                </Form.Text>\n              )}\n            </Form.Group>\n            <Button \n              variant=\"none\" \n              className=\"btn-default\" \n              type=\"submit\">\n            Add Game\n            </Button>\n          </Form>\n            }\n          </div>\n        </Col>\n        <Col className=\"outer-col\"></Col>\n      </Row>\n    </Container>\n    \n  )\n}\n\nexport default GameAdd","import React from 'react'\nimport { useForm } from 'react-hook-form'\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap'\nimport { getSingleGame, getAllPlayers, editGame } from '../../lib/api'\nimport { useLocation, useHistory } from 'react-router-dom'\n\nfunction GameEdit() {\n  const [playerList, setPlayerList] = React.useState(null)\n  const [formData, setFormData] = React.useState(null)\n  const { register, handleSubmit } = useForm()\n  const [formErrors, setFormErrors] = React.useState({\n    buyIn: '',\n    prizeForFirst: '',\n    prizeForSecond: '',\n    prizeForThird: '',\n    firstPlace: '',\n    secondPlace: '',\n    thirdPlace: '',\n    fourthPlace: '',\n    fifthPlace: '',\n    sixthPlace: '',\n    seventhPlace: '',\n    eighthPlace: '',\n    ninthPlace: '',\n    name: '',\n    date: '',\n  })\n  const onSubmit = async newData => {\n    newData = { ...newData, userId: formData['userId'], numberOfPlayers: formData['numberOfPlayers'] }\n    console.log(newData)\n    try {\n      await editGame(gameId, newData)\n      history.push('/dashboard')\n    } catch (err) {\n      setFormErrors(err.response.data)\n    }\n  }\n\n  const location = useLocation()\n  const history = useHistory()\n  const gameId = location.state.game\n\n  React.useEffect(() => {\n    const getData = async () => {\n      try {\n        const gameData = await getSingleGame(gameId)\n        const playerData = await getAllPlayers()\n        setFormData(gameData.data)\n        setPlayerList(playerData.data)\n      } catch (err) {\n        console.log(err)\n      }\n    }\n    getData()\n  }, [gameId])\n\n  return (\n    <Container className=\"login\" fluid>\n      {formData && playerList && (\n        <>\n          <Row>\n            <Col className=\"outer-col\"></Col>\n            <Col xs={4} className=\"form-vertical-align\">\n              <h2>Edit Game</h2>\n              <Form name=\"editForm\" onSubmit={handleSubmit(onSubmit)}>\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Buy In</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    className={`${formErrors['buyIn'] ? 'is-invalid' : ''}`}\n                    {...register('buyIn')}\n                    placeholder=\"Buy In\"\n                    name=\"buyIn\"\n                    defaultValue={formData.buyIn}\n                  />\n                  {formErrors['buyIn'] && (\n                    <Form.Text \n                      className=\"text-muted\">\n                        A Buy In is required\n                    </Form.Text>\n                  )}\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Prize For First</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    className={`${formErrors['prizeForFirst'] ? 'is-invalid' : ''}`}\n                    placeholder=\"Prize For First\"\n                    name=\"prizeForFirst\"\n                    defaultValue={formData.prizeForFirst}\n                    {...register('prizeForFirst')}\n                  />\n                  {formErrors['prizeForFirst'] && (\n                    <Form.Text \n                      className=\"text-muted\">\n                      A prize for first place is required\n                    </Form.Text>\n                  )}\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Prize For Second</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    className={`${formErrors['prizeForSecond'] ? 'is-invalid' : ''}`}\n                    placeholder=\"Prize For Second\"\n                    name=\"prizeForSecond\"\n                    defaultValue={formData.prizeForSecond}\n                    {...register('prizeForSecond')}\n                  />\n                  {formErrors['prizeForSecond'] && (\n                    <Form.Text className=\"text-muted\">A prize for second place is required</Form.Text>\n                  )}\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Prize For Third</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    className={`${formErrors['prizeForThird'] ? 'is-invalid' : ''}`}\n                    placeholder=\"Prize For Third\"\n                    name=\"prizeForThird\"\n                    defaultValue={formData.prizeForThird}\n                    {...register('prizeForThird')}\n                  />\n                  {formErrors['prizeForThird'] && (\n                    <Form.Text className=\"text-muted\">A prize for third place is required</Form.Text>\n                  )}\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>First Place</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    defaultValue=\"def\"\n                    {...register('firstPlace', { required: true })}\n                    name=\"firstPlace\">\n                    <option value={formData.firstPlace.id}>{formData.firstPlace.name}</option>\n                    {playerList.filter(player => player.id !== formData.firstPlace.id).map(player => (\n                      <option key={player.id} value={player.id}>{player.name}</option>\n                    ))}\n                  </Form.Control>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Second Place</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    defaultValue=\"def\"\n                    {...register('secondPlace', { required: true })}\n                    name=\"secondPlace\">\n                    <option value={formData.secondPlace.id}>{formData.secondPlace.name}</option>\n                    {playerList.filter(player => player.id !== formData.secondPlace.id).map(player => (\n                      <option key={player.id} value={player.id}>{player.name}</option>\n                    ))}\n                  </Form.Control>\n                </Form.Group>\n                \n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Third Place</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    defaultValue=\"def\"\n                    {...register('thirdPlace', { required: true })}\n                    name=\"thirdPlace\">\n                    <option value={formData.thirdPlace.id}>{formData.thirdPlace.name}</option>\n                    {playerList.filter(player => player.id !== formData.thirdPlace.id).map(player => (\n                      <option key={player.id} value={player.id}>{player.name}</option>\n                    ))}\n                  </Form.Control>\n                </Form.Group>\n\n                {formData.fourthPlace &&\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Fourth Place</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    {...register('fourthPlace', { required: true })}\n                    name=\"fourthPlace\">\n                    <option value={formData.fourthPlace.id}>{formData.fourthPlace.name}</option>\n                    {playerList.filter(player => player.id !== formData.fourthPlace.id).map(player => (\n                      <option key={player.id} value={player.id}>{player.name}</option>\n                    ))}\n                  </Form.Control>\n                </Form.Group>}\n\n                {formData.fifthPlace &&\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Fifth Place</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    {...register('fifthPlace', { required: true })}\n                    name=\"fifthPlace\">\n                    <option value={formData.fifthPlace.id}>{formData.fifthPlace.name}</option>\n                    {playerList.filter(player => player.id !== formData.fifthPlace.id).map(player => (\n                      <option key={player.id} value={player.id}>{player.name}</option>\n                    ))}\n                  </Form.Control>\n                </Form.Group>}\n                \n                {formData.sixthPlace &&\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Sixth Place</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    {...register('sixthPlace', { required: true })}\n                    name=\"sixthPlace\">\n                    <option value={formData.sixthPlace.id}>{formData.sixthPlace.name}</option>\n                    {playerList.filter(player => player.id !== formData.sixthPlace.id).map(player => (\n                      <option key={player.id} value={player.id}>{player.name}</option>\n                    ))}\n                  </Form.Control>\n                </Form.Group>}\n\n                {formData.seventhPlace &&\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Seventh Place</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    {...register('seventhPlace', { required: true })}\n                    name=\"seventhPlace\">\n                    <option value={formData.seventhPlace.id}>{formData.seventhPlace.name}</option>\n                    {playerList.filter(player => player.id !== formData.seventhPlace.id).map(player => (\n                      <option key={player.id} value={player.id}>{player.name}</option>\n                    ))}\n                  </Form.Control>\n                </Form.Group>}\n\n                {formData.eighthPlace &&\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Eighth Place</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    {...register('eighthPlace', { required: true })}\n                    name=\"eighthPlace\">\n                    <option value={formData.eighthPlace.id}>{formData.eighthPlace.name}</option>\n                    {playerList.filter(player => player.id !== formData.eighthPlace.id).map(player => (\n                      <option key={player.id} value={player.id}>{player.name}</option>\n                    ))}\n                  </Form.Control>\n                </Form.Group>}\n\n                {formData.ninthPlace &&\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Ninth Place</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    {...register('ninthPlace', { required: true })}\n                    name=\"ninthPlace\">\n                    <option value={formData.ninthPlace.id}>{formData.ninthPlace.name}</option>\n                    {playerList.filter(player => player.id !== formData.ninthPlace.id).map(player => (\n                      <option key={player.id} value={player.id}>{player.name}</option>\n                    ))}\n                  </Form.Control>\n                </Form.Group>}\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Game Name</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    className={`${formErrors['name'] ? 'is-invalid' : ''}`}\n                    placeholder=\"Game Name\"\n                    name=\"name\"\n                    defaultValue={formData.name}\n                    {...register('name')}\n                  />\n                  {formErrors['name'] && (\n                    <Form.Text \n                      className=\"text-muted\">\n                      A name for the game is required\n                    </Form.Text>\n                  )}\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Game Date</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    className={`${formErrors['date'] ? 'is-invalid' : ''}`}\n                    placeholder=\"Game Date\"\n                    name=\"date\"\n                    defaultValue={formData.date}\n                    {...register('date')}\n                  />\n                  {formErrors['date'] && (\n                    <Form.Text className=\"text-muted\">A date is required</Form.Text>\n                  )}\n                </Form.Group>\n                <Button \n                  variant=\"none\" \n                  className=\"btn-default\" \n                  type=\"submit\">\n                Submit Changes\n                </Button>\n              </Form>\n            </Col>\n            <Col className=\"outer-col\"></Col>\n          </Row>\n        </>\n      )}\n    </Container>\n  )\n}\n\nexport default GameEdit","import React from 'react'\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport SecureRoute from './components/common/SecureRoute'\n\nimport NavigationBar from './components/common/NavigationBar'\nimport Home from './components/common/Home'\nimport Register from './components/auth/Register'\nimport Login from './components/auth/Login'\nimport Dashboard from './components/common/Dashboard'\nimport PlayerAdd from './components/common/PlayerAdd'\nimport GameAdd from './components/common/GameAdd'\nimport GameEdit from './components/common/GameEdit'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <NavigationBar/>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <SecureRoute path=\"/addplayer\">\n          <PlayerAdd />\n        </SecureRoute>\n        <SecureRoute path=\"/addgame\">\n          <GameAdd />\n        </SecureRoute>\n        <SecureRoute path=\"/editgame\">\n          <GameEdit/>\n        </SecureRoute>\n        <Route path=\"/register\" component={Register} />\n        <Route path=\"/login\" component={Login} />\n        <SecureRoute path=\"/dashboard\"> \n          <Dashboard/>\n        </SecureRoute>\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/main.scss'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}